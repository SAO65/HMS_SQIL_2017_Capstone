data.EU.1990 <- read.csv("Output_EU_1990.csv")
data.EU.2010 <- read.csv("Output_EU_2010.csv")
data.ROW.1990 <- read.csv("Output_ROW_1990.csv")
data.ROW.2010 <- read.csv("Output_ROW_2010.csv")
head(data.EU.1990)
head(data.EU.2010)
head(data.ROW.1990)
head(data.ROW.2010)
attach(data.EU.1990)
attach(data.EU.2010)
attach(data.ROW.1990)
attach(data.ROW.2010)
df.EU.1990 <- data.frame(country=data.EU.1990$country, le=data.EU.1990$le, hale=data.EU.1990$hale, yld=data.EU.1990$yld, the=data.EU.1990$the, gdp=data.EU.1990$gdp, the.gdp=data.EU.1990$the.gdp)
df.EU.2010 <- data.frame(country=data.EU.2010$country, le=data.EU.2010$le,hale=data.EU.2010$hale, yld=data.EU.2010$yld, the=data.EU.2010$the, gdp=data.EU.2010$gdp, the.gdp=data.EU.2010$the.gdp)
df.ROW.1990 <- data.frame(country=data.ROW.1990$country, le=data.ROW.1990$le,hale=data.ROW.1990$hale, yld=data.ROW.1990$yld, the=data.ROW.1990$the, gdp=data.ROW.1990$gdp, the.gdp=data.ROW.1990$the.gdp)
df.ROW.2010 <- data.frame(country=data.ROW.2010$country, le=data.ROW.2010$le,hale=data.ROW.2010$hale, yld=data.ROW.2010$yld, the=data.ROW.2010$the, gdp=data.ROW.2010$gdp, the.gdp=data.ROW.2010$the.gdp)
df.EU.1990
df.EU.2010
df.ROW.1990
df.ROW.2010
ID.ROW <- "JPN"
ID.EU <- "ITA"
# Constant Scale in Graphs
lim.le <- c(30, 85)
lim.yld <- c(4, 15)
lim.hale <- c(30, 85)
lim.the <- c(100, 8500)
lim.gdp <- c(1000, 87500)
df.sust.EU <- data.frame(Country=df.EU.2010$country)
df.sust.EU$DELTA_HALE <- round((df.EU.2010$hale - df.EU.1990$hale) / df.EU.1990$hale, 3) * 100
df.sust.EU$DELTA_YLD <- round((df.EU.2010$yld - df.EU.1990$yld) / df.EU.1990$yld, 3) * 100
df.sust.EU$QUALITYe <- round(df.sust.EU$DELTA_HALE / df.sust.EU$DELTA_YLD, 3)
df.sust.EU$DELTA_THE <- round((df.EU.2010$the - df.EU.1990$the) / df.EU.1990$the, 3)  * 100
df.sust.EU$DELTA_GDP <- round((df.EU.2010$gdp - df.EU.1990$gdp) / df.EU.1990$gdp, 3)  * 100
df.sust.EU$COSTe <- round(df.sust.EU$DELTA_THE / df.sust.EU$DELTA_GDP, 3)
print(df.sust.EU, row.names = F)
plot(density(df.sust.EU$QUALITYe), main="Sustainable Quality", col="blue", lty=1, axes=F, lwd=2, xlab="QUALITYe, COSTe", ylab = "Frequency", ylim=c(0,3), xlim=c(0,2.5))
lines(density(df.sust.EU$COSTe), col="red", lty=1, lwd=2)
axis(1)
axis(2)
abline(v=mean(df.sust.EU$QUALITYe), lty=1, col="blue", lwd=1)
abline(v=mean(df.sust.EU$QUALITYe[df.sust.EU$Country == ID.EU]), lty=4, col="blue", lwd=1)
abline(v=mean(df.sust.EU$COSTe), lty=1, col="red",  lwd=1)
abline(v=mean(df.sust.EU$COSTe[df.sust.EU$Country == ID.EU]), lty=4, col="red", lwd=1)
abline(v=1, lty=1, col="black",  lwd=2)
legend(1.65, 2.5, c("Density QUALITYe","Density COSTe",
paste("EU QUALITYe =",round(mean(df.sust.EU$QUALITYe),2)) ,
paste("EU COSTe =",round(mean(df.sust.EU$COSTe),2)) ,
paste("Italy QUALITYe =",round(mean(df.sust.EU$QUALITYe[df.sust.EU$Country == ID.EU]),2)),
paste("Italy COSTe =",round(mean(df.sust.EU$COSTe[df.sust.EU$Country == ID.EU]),2))),
col=c("blue", "red", "blue", "red", "blue", "red"),
bty="n",
y.intersp=1.5,
lty=c(1,1,1,1,4,4),
cex = .75,
lwd=2)
library(gmodels)
for (i in 1:nrow(df.sust.EU)) {
if (df.sust.EU$COSTe[i] > 1){
df.sust.EU$Sustainability[i]="NS"
}
if (df.sust.EU$COSTe[i] <= 1){
df.sust.EU$Sustainability[i]="S"
}
if (df.sust.EU$QUALITYe[i] >= 1){
df.sust.EU$Quality[i]="Q"
}
if (df.sust.EU$QUALITYe[i] < 1){
df.sust.EU$Quality[i]="NQ"
}
}
df.sust.EU
with(df.sust.EU, CrossTable(Sustainability, Quality))
require(xlsx)
write.xlsx(df.EU.1990, "df.EU.xlsx", sheetName="1990")
write.xlsx(df.EU.2010, "df.EU.xlsx", sheetName="2010", append=TRUE)
write.xlsx(df.sust.EU, "df.EU.xlsx", sheetName="DELTA-EPSILON", append=TRUE)
library(gmodels)
for (i in 1:nrow(df.sust.EU)) {
if (df.sust.EU$COSTe[i] > 1){
df.sust.EU$Sustainability[i]="NS"
}
if (df.sust.EU$COSTe[i] <= 1){
df.sust.EU$Sustainability[i]="S"
}
if (df.sust.EU$QUALITYe[i] >= 1){
df.sust.EU$Quality[i]="Q"
}
if (df.sust.EU$QUALITYe[i] < 1){
df.sust.EU$Quality[i]="NQ"
}
}
df.sust.EU
with(df.sust.EU, CrossTable(Sustainability, Quality, format = "SPSS")))
library(gmodels)
for (i in 1:nrow(df.sust.EU)) {
if (df.sust.EU$COSTe[i] > 1){
df.sust.EU$Sustainability[i]="NS"
}
if (df.sust.EU$COSTe[i] <= 1){
df.sust.EU$Sustainability[i]="S"
}
if (df.sust.EU$QUALITYe[i] >= 1){
df.sust.EU$Quality[i]="Q"
}
if (df.sust.EU$QUALITYe[i] < 1){
df.sust.EU$Quality[i]="NQ"
}
}
df.sust.EU
with(df.sust.EU, CrossTable(Sustainability, Quality, format = "SPSS"))
library(gmodels)
for (i in 1:nrow(df.sust.EU)) {
if (df.sust.EU$COSTe[i] > 1){
df.sust.EU$Sustainability[i]="NS"
}
if (df.sust.EU$COSTe[i] <= 1){
df.sust.EU$Sustainability[i]="S"
}
if (df.sust.EU$QUALITYe[i] >= 1){
df.sust.EU$Quality[i]="Q"
}
if (df.sust.EU$QUALITYe[i] < 1){
df.sust.EU$Quality[i]="NQ"
}
}
df.sust.EU
with(df.sust.EU, CrossTable(Sustainability, Quality, format = "SPSS", col="red"))
?CrossTable
library(gmodels)
for (i in 1:nrow(df.sust.EU)) {
if (df.sust.EU$COSTe[i] > 1){
df.sust.EU$Sustainability[i]="NS"
}
if (df.sust.EU$COSTe[i] <= 1){
df.sust.EU$Sustainability[i]="S"
}
if (df.sust.EU$QUALITYe[i] >= 1){
df.sust.EU$Quality[i]="Q"
}
if (df.sust.EU$QUALITYe[i] < 1){
df.sust.EU$Quality[i]="NQ"
}
}
df.sust.EU
with(df.sust.EU, CrossTable(Sustainability, Quality, digits=1, format = "SPSS", col="red"))
library(gmodels)
for (i in 1:nrow(df.sust.EU)) {
if (df.sust.EU$COSTe[i] > 1){
df.sust.EU$Sustainability[i]="NS"
}
if (df.sust.EU$COSTe[i] <= 1){
df.sust.EU$Sustainability[i]="S"
}
if (df.sust.EU$QUALITYe[i] >= 1){
df.sust.EU$Quality[i]="Q"
}
if (df.sust.EU$QUALITYe[i] < 1){
df.sust.EU$Quality[i]="NQ"
}
}
df.sust.EU
with(df.sust.EU, CrossTable(Sustainability, Quality, expected=T, digits=2, format = "SPSS", col="red"))
library(gmodels)
for (i in 1:nrow(df.sust.EU)) {
if (df.sust.EU$COSTe[i] > 1){
df.sust.EU$Sustainability[i]="NS"
}
if (df.sust.EU$COSTe[i] <= 1){
df.sust.EU$Sustainability[i]="S"
}
if (df.sust.EU$QUALITYe[i] >= 1){
df.sust.EU$Quality[i]="Q"
}
if (df.sust.EU$QUALITYe[i] < 1){
df.sust.EU$Quality[i]="NQ"
}
}
df.sust.EU
with(df.sust.EU, CrossTable(Sustainability, Quality, expected=T, digits=2, format = "SPSS"))
library(ReporteRs)
mydoc <- docx()
mydoc <- addFlexTable(mydoc, flextable = FlexTable(df.sust.EU))
mydoc
FlexTable(df.sust.EU)
library(ReporteRs)
MyFTable <- vanilla.table(df.sust.EU)
MyFTable <- setFlexTableWidths( MyFTable, widths = c(3, 1, 0.5, rep(0.7, 6) ) )
MyFTable
library(ReporteRs)
MyFTable <- vanilla.table(df.sust.EU)
MyFTable <- setFlexTableWidths( MyFTable, widths = c(3, 1, 0.5, rep(0.7, 6) ) )
MyFTable
writeDoc(MyFTable, file = "MyFTable.docx")
library(ReporteRs)
MyFTable <- vanilla.table(df.sust.EU)
MyFTable <- setFlexTableWidths( MyFTable, widths = c(3, 1, 0.5, rep(0.7, 6) ) )
MyFTable = setZebraStyle( MyFTable, odd = '#eeeeee', even = 'white' )
MyFTable
MyFTable <- vanilla.table(df.sust.EU)
MyFTable <- setFlexTableWidths( MyFTable, widths = c(3, 1, 0.5, rep(0.7, 6) ) )
MyFTable = setZebraStyle( MyFTable, odd = '#eeeeee', even = 'white' )
MyFTable
mydoc <- docx()
mydoc <- addFlexTable(mydoc, flextable = MyFTable)
writeDoc(mydoc, file = "MyFTable.docx")
writeDoc(mydoc, file = "MyFTable.xlsx")
capture.output(CrossTable(Sustainability, Quality, expected=T, digits=2, format = "SPSS"), file = "clipboard")
a = vanilla.table(CrossTable(Sustainability, Quality, expected=T, digits=2, format = "SPSS"))
a = vanilla.table(with(df.sust.EU, CrossTable(Sustainability, Quality, expected=T, digits=2, format = "SPSS")))
a
a = vanilla.table(with(df.sust.EU, CrossTable(Sustainability, Quality, expected=T, digits=2, format = "SPSS")))
a
library(ReporteRs)
MyFTable <- vanilla.table(df.sust.EU)
MyFTable <- setFlexTableWidths( MyFTable, widths = c(3, 1, 0.5, rep(0.7, 6) ) )
MyFTable = setZebraStyle( MyFTable, odd = '#eeeeee', even = 'white' )
MyFTable
mydoc <- docx()
mydoc <- addFlexTable(mydoc, flextable = MyFTable)
writeDoc(mydoc, file = "MyFTable.docx")
